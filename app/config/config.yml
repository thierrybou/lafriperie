imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.path.article_images: '/lafriperie/web/uploads/images/articles'

framework:
    #esi: ~
    translator:
        paths:
            - '%kernel.project_dir%/app/Resources/FOSUserBundle/translations'
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enabled: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Twig Extensions
services:
    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     '%database_host%'
        port:     '%database_port%'
        dbname:   '%database_name%'
        user:     '%database_user%'
        password: '%database_password%'
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy:             doctrine.orm.naming_strategy.underscore
        auto_mapping:                true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    encryption: ssl
    port: 465
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# FOSUser Configuration
fos_user:
    db_driver:       orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name:   main
    user_class:      AppBundle\Entity\User
    from_email:
        address:     "test@gmail.com"
        sender_name: "test"
    service:
        mailer:       fos_user.mailer.twig_swift
    registration:
        confirmation:
            enabled:  true
            from_email:
                address:     registration@example.com
                sender_name: Demo Registration
            template:        '@FOSUser/Registration/email.txt.twig'
        form:
            type: AppBundle\Form\RegistrationType
    profile:
        form:
            type: AppBundle\Form\ProfileType
    resetting:
        email:
            from_email:
                address:     resetting@example.com
                sender_name: Demo Resetting
            template:        email/password_resetting.email.twig

# EasyAdmin Configuration
easy_admin:
    site_name: 'Lafriperie ADMIN'
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    entities:
        Article:
            class: ArticleBundle\Entity\Article
            list:
                fields:
                    - id
                    - name
                    - category
                    - brand
                    - model
                    - gender
                    - description
                    - quantity
                    - price
                    - { property: 'image', type: 'image', base_path: '%app.path.article_images%' }
                    - updated
            show:
                fields:
                    - { property: 'image', type: 'image', base_path: '%app.path.article_images%' }
            form:
                fields:
                    - { property: 'imageFile', type: 'vich_image' }
        User:
            class: AppBundle\Entity\User

# VichUploader Configuration
vich_uploader:
    db_driver: orm
    mappings:
        article_images:
            uri_prefix:         '/uploads/images/articles'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/articles'

            inject_on_load: false
            delete_on_update: true
            delete_on_remove: true
        user_image:
            uri_prefix:         '/uploads/images/users/'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/users'

            inject_on_load: false
            delete_on_update: true
            delete_on_remove: true


# LiipImagineBundle Configuration
liip_imagine:
    resolvers:
        default:
            web_path: ~
    filter_sets:
        cache: ~
        article_thumb:
            quality: 75
            filters:
                thumbnail:  { size: [240, 180], mode: outbound }
                #background: { size: [121, 91], position: center, color: '#000000' }
        user_thumb:
            quality: 75
            filters:
                thumbnail:
                    size: [450, 287]
                    mode: inset

# Payum Configuration
payum:
    security:
        token_storage:
            PaymentBundle\Entity\PaymentToken: { doctrine: orm }

    storages:
        PaymentBundle\Entity\Payment: { doctrine: orm }

    gateways:
        lafriperie_with_paypal:
            factory: paypal_pro_checkout
            username: '%paypal_username%'
            password: '%paypal_email%'
            partner:  'EDIT ME'
            vendor:   'EDIT ME'
            tender:  C
            sandbox: true